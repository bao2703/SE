#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_KHACH_SAN")]
	public partial class QLKhachSanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAO_CAO(BAO_CAO instance);
    partial void UpdateBAO_CAO(BAO_CAO instance);
    partial void DeleteBAO_CAO(BAO_CAO instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertCT_DAT_PHONG(CT_DAT_PHONG instance);
    partial void UpdateCT_DAT_PHONG(CT_DAT_PHONG instance);
    partial void DeleteCT_DAT_PHONG(CT_DAT_PHONG instance);
    partial void InsertCT_DICH_VU(CT_DICH_VU instance);
    partial void UpdateCT_DICH_VU(CT_DICH_VU instance);
    partial void DeleteCT_DICH_VU(CT_DICH_VU instance);
    partial void InsertCT_GIA_THUE(CT_GIA_THUE instance);
    partial void UpdateCT_GIA_THUE(CT_GIA_THUE instance);
    partial void DeleteCT_GIA_THUE(CT_GIA_THUE instance);
    partial void InsertCT_THUE_PHONG(CT_THUE_PHONG instance);
    partial void UpdateCT_THUE_PHONG(CT_THUE_PHONG instance);
    partial void DeleteCT_THUE_PHONG(CT_THUE_PHONG instance);
    partial void InsertDICH_VU(DICH_VU instance);
    partial void UpdateDICH_VU(DICH_VU instance);
    partial void DeleteDICH_VU(DICH_VU instance);
    partial void InsertGIA_THUE(GIA_THUE instance);
    partial void UpdateGIA_THUE(GIA_THUE instance);
    partial void DeleteGIA_THUE(GIA_THUE instance);
    partial void InsertHOA_DON(HOA_DON instance);
    partial void UpdateHOA_DON(HOA_DON instance);
    partial void DeleteHOA_DON(HOA_DON instance);
    partial void InsertKHACH_HANG(KHACH_HANG instance);
    partial void UpdateKHACH_HANG(KHACH_HANG instance);
    partial void DeleteKHACH_HANG(KHACH_HANG instance);
    partial void InsertNHAN_VIEN(NHAN_VIEN instance);
    partial void UpdateNHAN_VIEN(NHAN_VIEN instance);
    partial void DeleteNHAN_VIEN(NHAN_VIEN instance);
    partial void InsertPHIEU_DAT_PHONG(PHIEU_DAT_PHONG instance);
    partial void UpdatePHIEU_DAT_PHONG(PHIEU_DAT_PHONG instance);
    partial void DeletePHIEU_DAT_PHONG(PHIEU_DAT_PHONG instance);
    partial void InsertPHIEU_THUE_PHONG(PHIEU_THUE_PHONG instance);
    partial void UpdatePHIEU_THUE_PHONG(PHIEU_THUE_PHONG instance);
    partial void DeletePHIEU_THUE_PHONG(PHIEU_THUE_PHONG instance);
    #endregion
		
		public QLKhachSanDataContext() : 
				base(global::DAO.Properties.Settings.Default.QL_KHACH_SANConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhachSanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhachSanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhachSanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKhachSanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAO_CAO> BAO_CAOs
		{
			get
			{
				return this.GetTable<BAO_CAO>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<CT_DAT_PHONG> CT_DAT_PHONGs
		{
			get
			{
				return this.GetTable<CT_DAT_PHONG>();
			}
		}
		
		public System.Data.Linq.Table<CT_DICH_VU> CT_DICH_VUs
		{
			get
			{
				return this.GetTable<CT_DICH_VU>();
			}
		}
		
		public System.Data.Linq.Table<CT_GIA_THUE> CT_GIA_THUEs
		{
			get
			{
				return this.GetTable<CT_GIA_THUE>();
			}
		}
		
		public System.Data.Linq.Table<CT_THUE_PHONG> CT_THUE_PHONGs
		{
			get
			{
				return this.GetTable<CT_THUE_PHONG>();
			}
		}
		
		public System.Data.Linq.Table<DICH_VU> DICH_VUs
		{
			get
			{
				return this.GetTable<DICH_VU>();
			}
		}
		
		public System.Data.Linq.Table<GIA_THUE> GIA_THUEs
		{
			get
			{
				return this.GetTable<GIA_THUE>();
			}
		}
		
		public System.Data.Linq.Table<HOA_DON> HOA_DONs
		{
			get
			{
				return this.GetTable<HOA_DON>();
			}
		}
		
		public System.Data.Linq.Table<KHACH_HANG> KHACH_HANGs
		{
			get
			{
				return this.GetTable<KHACH_HANG>();
			}
		}
		
		public System.Data.Linq.Table<NHAN_VIEN> NHAN_VIENs
		{
			get
			{
				return this.GetTable<NHAN_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEU_DAT_PHONG> PHIEU_DAT_PHONGs
		{
			get
			{
				return this.GetTable<PHIEU_DAT_PHONG>();
			}
		}
		
		public System.Data.Linq.Table<PHIEU_THUE_PHONG> PHIEU_THUE_PHONGs
		{
			get
			{
				return this.GetTable<PHIEU_THUE_PHONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAO_CAO")]
	public partial class BAO_CAO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_BAO_CAO;
		
		private string _TEN_BAO_CAO;
		
		private System.DateTime _NGAY_LAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BAO_CAOChanging(string value);
    partial void OnID_BAO_CAOChanged();
    partial void OnTEN_BAO_CAOChanging(string value);
    partial void OnTEN_BAO_CAOChanged();
    partial void OnNGAY_LAPChanging(System.DateTime value);
    partial void OnNGAY_LAPChanged();
    #endregion
		
		public BAO_CAO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BAO_CAO", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_BAO_CAO
		{
			get
			{
				return this._ID_BAO_CAO;
			}
			set
			{
				if ((this._ID_BAO_CAO != value))
				{
					this.OnID_BAO_CAOChanging(value);
					this.SendPropertyChanging();
					this._ID_BAO_CAO = value;
					this.SendPropertyChanged("ID_BAO_CAO");
					this.OnID_BAO_CAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_BAO_CAO", DbType="VarChar(45)")]
		public string TEN_BAO_CAO
		{
			get
			{
				return this._TEN_BAO_CAO;
			}
			set
			{
				if ((this._TEN_BAO_CAO != value))
				{
					this.OnTEN_BAO_CAOChanging(value);
					this.SendPropertyChanging();
					this._TEN_BAO_CAO = value;
					this.SendPropertyChanged("TEN_BAO_CAO");
					this.OnTEN_BAO_CAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_LAP", DbType="DateTime NOT NULL")]
		public System.DateTime NGAY_LAP
		{
			get
			{
				return this._NGAY_LAP;
			}
			set
			{
				if ((this._NGAY_LAP != value))
				{
					this.OnNGAY_LAPChanging(value);
					this.SendPropertyChanging();
					this._NGAY_LAP = value;
					this.SendPropertyChanged("NGAY_LAP");
					this.OnNGAY_LAPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_PHONG;
		
		private string _LOAI_PHONG;
		
		private EntitySet<CT_DAT_PHONG> _CT_DAT_PHONGs;
		
		private EntitySet<CT_GIA_THUE> _CT_GIA_THUEs;
		
		private EntitySet<CT_THUE_PHONG> _CT_THUE_PHONGs;
		
		private EntitySet<KHACH_HANG> _KHACH_HANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHONGChanging(string value);
    partial void OnID_PHONGChanged();
    partial void OnLOAI_PHONGChanging(string value);
    partial void OnLOAI_PHONGChanged();
    #endregion
		
		public PHONG()
		{
			this._CT_DAT_PHONGs = new EntitySet<CT_DAT_PHONG>(new Action<CT_DAT_PHONG>(this.attach_CT_DAT_PHONGs), new Action<CT_DAT_PHONG>(this.detach_CT_DAT_PHONGs));
			this._CT_GIA_THUEs = new EntitySet<CT_GIA_THUE>(new Action<CT_GIA_THUE>(this.attach_CT_GIA_THUEs), new Action<CT_GIA_THUE>(this.detach_CT_GIA_THUEs));
			this._CT_THUE_PHONGs = new EntitySet<CT_THUE_PHONG>(new Action<CT_THUE_PHONG>(this.attach_CT_THUE_PHONGs), new Action<CT_THUE_PHONG>(this.detach_CT_THUE_PHONGs));
			this._KHACH_HANGs = new EntitySet<KHACH_HANG>(new Action<KHACH_HANG>(this.attach_KHACH_HANGs), new Action<KHACH_HANG>(this.detach_KHACH_HANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PHONG
		{
			get
			{
				return this._ID_PHONG;
			}
			set
			{
				if ((this._ID_PHONG != value))
				{
					this.OnID_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_PHONG = value;
					this.SendPropertyChanged("ID_PHONG");
					this.OnID_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAI_PHONG", DbType="VarChar(45)")]
		public string LOAI_PHONG
		{
			get
			{
				return this._LOAI_PHONG;
			}
			set
			{
				if ((this._LOAI_PHONG != value))
				{
					this.OnLOAI_PHONGChanging(value);
					this.SendPropertyChanging();
					this._LOAI_PHONG = value;
					this.SendPropertyChanged("LOAI_PHONG");
					this.OnLOAI_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CT_DAT_PHONG", Storage="_CT_DAT_PHONGs", ThisKey="ID_PHONG", OtherKey="ID_PHONG")]
		public EntitySet<CT_DAT_PHONG> CT_DAT_PHONGs
		{
			get
			{
				return this._CT_DAT_PHONGs;
			}
			set
			{
				this._CT_DAT_PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CT_GIA_THUE", Storage="_CT_GIA_THUEs", ThisKey="ID_PHONG", OtherKey="ID_PHONG")]
		public EntitySet<CT_GIA_THUE> CT_GIA_THUEs
		{
			get
			{
				return this._CT_GIA_THUEs;
			}
			set
			{
				this._CT_GIA_THUEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CT_THUE_PHONG", Storage="_CT_THUE_PHONGs", ThisKey="ID_PHONG", OtherKey="ID_PHONG")]
		public EntitySet<CT_THUE_PHONG> CT_THUE_PHONGs
		{
			get
			{
				return this._CT_THUE_PHONGs;
			}
			set
			{
				this._CT_THUE_PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_KHACH_HANG", Storage="_KHACH_HANGs", ThisKey="ID_PHONG", OtherKey="ID_PHONG")]
		public EntitySet<KHACH_HANG> KHACH_HANGs
		{
			get
			{
				return this._KHACH_HANGs;
			}
			set
			{
				this._KHACH_HANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DAT_PHONGs(CT_DAT_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CT_DAT_PHONGs(CT_DAT_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_CT_GIA_THUEs(CT_GIA_THUE entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CT_GIA_THUEs(CT_GIA_THUE entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_CT_THUE_PHONGs(CT_THUE_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CT_THUE_PHONGs(CT_THUE_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_KHACH_HANGs(KHACH_HANG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_KHACH_HANGs(KHACH_HANG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DAT_PHONG")]
	public partial class CT_DAT_PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DAT_PHONG;
		
		private string _ID_PHONG;
		
		private int _SO_KHACH;
		
		private System.DateTime _NGAY_DEN;
		
		private System.DateTime _NGAY_DI;
		
		private EntityRef<PHONG> _PHONG;
		
		private EntityRef<PHIEU_DAT_PHONG> _PHIEU_DAT_PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DAT_PHONGChanging(string value);
    partial void OnID_DAT_PHONGChanged();
    partial void OnID_PHONGChanging(string value);
    partial void OnID_PHONGChanged();
    partial void OnSO_KHACHChanging(int value);
    partial void OnSO_KHACHChanged();
    partial void OnNGAY_DENChanging(System.DateTime value);
    partial void OnNGAY_DENChanged();
    partial void OnNGAY_DIChanging(System.DateTime value);
    partial void OnNGAY_DIChanged();
    #endregion
		
		public CT_DAT_PHONG()
		{
			this._PHONG = default(EntityRef<PHONG>);
			this._PHIEU_DAT_PHONG = default(EntityRef<PHIEU_DAT_PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DAT_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DAT_PHONG
		{
			get
			{
				return this._ID_DAT_PHONG;
			}
			set
			{
				if ((this._ID_DAT_PHONG != value))
				{
					if (this._PHIEU_DAT_PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DAT_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_DAT_PHONG = value;
					this.SendPropertyChanged("ID_DAT_PHONG");
					this.OnID_DAT_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PHONG
		{
			get
			{
				return this._ID_PHONG;
			}
			set
			{
				if ((this._ID_PHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_PHONG = value;
					this.SendPropertyChanged("ID_PHONG");
					this.OnID_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SO_KHACH", DbType="Int NOT NULL")]
		public int SO_KHACH
		{
			get
			{
				return this._SO_KHACH;
			}
			set
			{
				if ((this._SO_KHACH != value))
				{
					this.OnSO_KHACHChanging(value);
					this.SendPropertyChanging();
					this._SO_KHACH = value;
					this.SendPropertyChanged("SO_KHACH");
					this.OnSO_KHACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_DEN", DbType="DateTime NOT NULL")]
		public System.DateTime NGAY_DEN
		{
			get
			{
				return this._NGAY_DEN;
			}
			set
			{
				if ((this._NGAY_DEN != value))
				{
					this.OnNGAY_DENChanging(value);
					this.SendPropertyChanging();
					this._NGAY_DEN = value;
					this.SendPropertyChanged("NGAY_DEN");
					this.OnNGAY_DENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_DI", DbType="DateTime NOT NULL")]
		public System.DateTime NGAY_DI
		{
			get
			{
				return this._NGAY_DI;
			}
			set
			{
				if ((this._NGAY_DI != value))
				{
					this.OnNGAY_DIChanging(value);
					this.SendPropertyChanging();
					this._NGAY_DI = value;
					this.SendPropertyChanged("NGAY_DI");
					this.OnNGAY_DIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CT_DAT_PHONG", Storage="_PHONG", ThisKey="ID_PHONG", OtherKey="ID_PHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CT_DAT_PHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CT_DAT_PHONGs.Add(this);
						this._ID_PHONG = value.ID_PHONG;
					}
					else
					{
						this._ID_PHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_DAT_PHONG_CT_DAT_PHONG", Storage="_PHIEU_DAT_PHONG", ThisKey="ID_DAT_PHONG", OtherKey="ID_DAT_PHONG", IsForeignKey=true)]
		public PHIEU_DAT_PHONG PHIEU_DAT_PHONG
		{
			get
			{
				return this._PHIEU_DAT_PHONG.Entity;
			}
			set
			{
				PHIEU_DAT_PHONG previousValue = this._PHIEU_DAT_PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEU_DAT_PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEU_DAT_PHONG.Entity = null;
						previousValue.CT_DAT_PHONGs.Remove(this);
					}
					this._PHIEU_DAT_PHONG.Entity = value;
					if ((value != null))
					{
						value.CT_DAT_PHONGs.Add(this);
						this._ID_DAT_PHONG = value.ID_DAT_PHONG;
					}
					else
					{
						this._ID_DAT_PHONG = default(string);
					}
					this.SendPropertyChanged("PHIEU_DAT_PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DICH_VU")]
	public partial class CT_DICH_VU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DICH_VU;
		
		private string _ID_THUE_PHONG;
		
		private int _SO_LUONG;
		
		private int _TIEN_DV;
		
		private EntityRef<DICH_VU> _DICH_VU;
		
		private EntityRef<PHIEU_THUE_PHONG> _PHIEU_THUE_PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DICH_VUChanging(string value);
    partial void OnID_DICH_VUChanged();
    partial void OnID_THUE_PHONGChanging(string value);
    partial void OnID_THUE_PHONGChanged();
    partial void OnSO_LUONGChanging(int value);
    partial void OnSO_LUONGChanged();
    partial void OnTIEN_DVChanging(int value);
    partial void OnTIEN_DVChanged();
    #endregion
		
		public CT_DICH_VU()
		{
			this._DICH_VU = default(EntityRef<DICH_VU>);
			this._PHIEU_THUE_PHONG = default(EntityRef<PHIEU_THUE_PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DICH_VU", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DICH_VU
		{
			get
			{
				return this._ID_DICH_VU;
			}
			set
			{
				if ((this._ID_DICH_VU != value))
				{
					if (this._DICH_VU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DICH_VUChanging(value);
					this.SendPropertyChanging();
					this._ID_DICH_VU = value;
					this.SendPropertyChanged("ID_DICH_VU");
					this.OnID_DICH_VUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_THUE_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_THUE_PHONG
		{
			get
			{
				return this._ID_THUE_PHONG;
			}
			set
			{
				if ((this._ID_THUE_PHONG != value))
				{
					if (this._PHIEU_THUE_PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_THUE_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_THUE_PHONG = value;
					this.SendPropertyChanged("ID_THUE_PHONG");
					this.OnID_THUE_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SO_LUONG", DbType="Int NOT NULL")]
		public int SO_LUONG
		{
			get
			{
				return this._SO_LUONG;
			}
			set
			{
				if ((this._SO_LUONG != value))
				{
					this.OnSO_LUONGChanging(value);
					this.SendPropertyChanging();
					this._SO_LUONG = value;
					this.SendPropertyChanged("SO_LUONG");
					this.OnSO_LUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEN_DV", DbType="Int NOT NULL")]
		public int TIEN_DV
		{
			get
			{
				return this._TIEN_DV;
			}
			set
			{
				if ((this._TIEN_DV != value))
				{
					this.OnTIEN_DVChanging(value);
					this.SendPropertyChanging();
					this._TIEN_DV = value;
					this.SendPropertyChanged("TIEN_DV");
					this.OnTIEN_DVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICH_VU_CT_DICH_VU", Storage="_DICH_VU", ThisKey="ID_DICH_VU", OtherKey="ID_DICH_VU", IsForeignKey=true)]
		public DICH_VU DICH_VU
		{
			get
			{
				return this._DICH_VU.Entity;
			}
			set
			{
				DICH_VU previousValue = this._DICH_VU.Entity;
				if (((previousValue != value) 
							|| (this._DICH_VU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICH_VU.Entity = null;
						previousValue.CT_DICH_VUs.Remove(this);
					}
					this._DICH_VU.Entity = value;
					if ((value != null))
					{
						value.CT_DICH_VUs.Add(this);
						this._ID_DICH_VU = value.ID_DICH_VU;
					}
					else
					{
						this._ID_DICH_VU = default(string);
					}
					this.SendPropertyChanged("DICH_VU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_THUE_PHONG_CT_DICH_VU", Storage="_PHIEU_THUE_PHONG", ThisKey="ID_THUE_PHONG", OtherKey="ID_THUE_PHONG", IsForeignKey=true)]
		public PHIEU_THUE_PHONG PHIEU_THUE_PHONG
		{
			get
			{
				return this._PHIEU_THUE_PHONG.Entity;
			}
			set
			{
				PHIEU_THUE_PHONG previousValue = this._PHIEU_THUE_PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEU_THUE_PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEU_THUE_PHONG.Entity = null;
						previousValue.CT_DICH_VUs.Remove(this);
					}
					this._PHIEU_THUE_PHONG.Entity = value;
					if ((value != null))
					{
						value.CT_DICH_VUs.Add(this);
						this._ID_THUE_PHONG = value.ID_THUE_PHONG;
					}
					else
					{
						this._ID_THUE_PHONG = default(string);
					}
					this.SendPropertyChanged("PHIEU_THUE_PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_GIA_THUE")]
	public partial class CT_GIA_THUE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_PHONG;
		
		private string _ID_GIA_THUE;
		
		private int _SO_LUONG;
		
		private EntityRef<PHONG> _PHONG;
		
		private EntityRef<GIA_THUE> _GIA_THUE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHONGChanging(string value);
    partial void OnID_PHONGChanged();
    partial void OnID_GIA_THUEChanging(string value);
    partial void OnID_GIA_THUEChanged();
    partial void OnSO_LUONGChanging(int value);
    partial void OnSO_LUONGChanged();
    #endregion
		
		public CT_GIA_THUE()
		{
			this._PHONG = default(EntityRef<PHONG>);
			this._GIA_THUE = default(EntityRef<GIA_THUE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PHONG
		{
			get
			{
				return this._ID_PHONG;
			}
			set
			{
				if ((this._ID_PHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_PHONG = value;
					this.SendPropertyChanged("ID_PHONG");
					this.OnID_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GIA_THUE", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_GIA_THUE
		{
			get
			{
				return this._ID_GIA_THUE;
			}
			set
			{
				if ((this._ID_GIA_THUE != value))
				{
					if (this._GIA_THUE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GIA_THUEChanging(value);
					this.SendPropertyChanging();
					this._ID_GIA_THUE = value;
					this.SendPropertyChanged("ID_GIA_THUE");
					this.OnID_GIA_THUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SO_LUONG", DbType="Int NOT NULL")]
		public int SO_LUONG
		{
			get
			{
				return this._SO_LUONG;
			}
			set
			{
				if ((this._SO_LUONG != value))
				{
					this.OnSO_LUONGChanging(value);
					this.SendPropertyChanging();
					this._SO_LUONG = value;
					this.SendPropertyChanged("SO_LUONG");
					this.OnSO_LUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CT_GIA_THUE", Storage="_PHONG", ThisKey="ID_PHONG", OtherKey="ID_PHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CT_GIA_THUEs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CT_GIA_THUEs.Add(this);
						this._ID_PHONG = value.ID_PHONG;
					}
					else
					{
						this._ID_PHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIA_THUE_CT_GIA_THUE", Storage="_GIA_THUE", ThisKey="ID_GIA_THUE", OtherKey="ID_GIA_THUE", IsForeignKey=true)]
		public GIA_THUE GIA_THUE
		{
			get
			{
				return this._GIA_THUE.Entity;
			}
			set
			{
				GIA_THUE previousValue = this._GIA_THUE.Entity;
				if (((previousValue != value) 
							|| (this._GIA_THUE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIA_THUE.Entity = null;
						previousValue.CT_GIA_THUEs.Remove(this);
					}
					this._GIA_THUE.Entity = value;
					if ((value != null))
					{
						value.CT_GIA_THUEs.Add(this);
						this._ID_GIA_THUE = value.ID_GIA_THUE;
					}
					else
					{
						this._ID_GIA_THUE = default(string);
					}
					this.SendPropertyChanged("GIA_THUE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_THUE_PHONG")]
	public partial class CT_THUE_PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_THUE_PHONG;
		
		private string _ID_PHONG;
		
		private int _SO_KHACH;
		
		private System.DateTime _NGAY_NHAN;
		
		private System.DateTime _NGAY_TRA;
		
		private int _TIEN_THUE;
		
		private EntityRef<PHONG> _PHONG;
		
		private EntityRef<PHIEU_THUE_PHONG> _PHIEU_THUE_PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_THUE_PHONGChanging(string value);
    partial void OnID_THUE_PHONGChanged();
    partial void OnID_PHONGChanging(string value);
    partial void OnID_PHONGChanged();
    partial void OnSO_KHACHChanging(int value);
    partial void OnSO_KHACHChanged();
    partial void OnNGAY_NHANChanging(System.DateTime value);
    partial void OnNGAY_NHANChanged();
    partial void OnNGAY_TRAChanging(System.DateTime value);
    partial void OnNGAY_TRAChanged();
    partial void OnTIEN_THUEChanging(int value);
    partial void OnTIEN_THUEChanged();
    #endregion
		
		public CT_THUE_PHONG()
		{
			this._PHONG = default(EntityRef<PHONG>);
			this._PHIEU_THUE_PHONG = default(EntityRef<PHIEU_THUE_PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_THUE_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_THUE_PHONG
		{
			get
			{
				return this._ID_THUE_PHONG;
			}
			set
			{
				if ((this._ID_THUE_PHONG != value))
				{
					if (this._PHIEU_THUE_PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_THUE_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_THUE_PHONG = value;
					this.SendPropertyChanged("ID_THUE_PHONG");
					this.OnID_THUE_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PHONG
		{
			get
			{
				return this._ID_PHONG;
			}
			set
			{
				if ((this._ID_PHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_PHONG = value;
					this.SendPropertyChanged("ID_PHONG");
					this.OnID_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SO_KHACH", DbType="Int NOT NULL")]
		public int SO_KHACH
		{
			get
			{
				return this._SO_KHACH;
			}
			set
			{
				if ((this._SO_KHACH != value))
				{
					this.OnSO_KHACHChanging(value);
					this.SendPropertyChanging();
					this._SO_KHACH = value;
					this.SendPropertyChanged("SO_KHACH");
					this.OnSO_KHACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_NHAN", DbType="DateTime NOT NULL")]
		public System.DateTime NGAY_NHAN
		{
			get
			{
				return this._NGAY_NHAN;
			}
			set
			{
				if ((this._NGAY_NHAN != value))
				{
					this.OnNGAY_NHANChanging(value);
					this.SendPropertyChanging();
					this._NGAY_NHAN = value;
					this.SendPropertyChanged("NGAY_NHAN");
					this.OnNGAY_NHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_TRA", DbType="DateTime NOT NULL")]
		public System.DateTime NGAY_TRA
		{
			get
			{
				return this._NGAY_TRA;
			}
			set
			{
				if ((this._NGAY_TRA != value))
				{
					this.OnNGAY_TRAChanging(value);
					this.SendPropertyChanging();
					this._NGAY_TRA = value;
					this.SendPropertyChanged("NGAY_TRA");
					this.OnNGAY_TRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEN_THUE", DbType="Int NOT NULL")]
		public int TIEN_THUE
		{
			get
			{
				return this._TIEN_THUE;
			}
			set
			{
				if ((this._TIEN_THUE != value))
				{
					this.OnTIEN_THUEChanging(value);
					this.SendPropertyChanging();
					this._TIEN_THUE = value;
					this.SendPropertyChanged("TIEN_THUE");
					this.OnTIEN_THUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CT_THUE_PHONG", Storage="_PHONG", ThisKey="ID_PHONG", OtherKey="ID_PHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CT_THUE_PHONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CT_THUE_PHONGs.Add(this);
						this._ID_PHONG = value.ID_PHONG;
					}
					else
					{
						this._ID_PHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_THUE_PHONG_CT_THUE_PHONG", Storage="_PHIEU_THUE_PHONG", ThisKey="ID_THUE_PHONG", OtherKey="ID_THUE_PHONG", IsForeignKey=true)]
		public PHIEU_THUE_PHONG PHIEU_THUE_PHONG
		{
			get
			{
				return this._PHIEU_THUE_PHONG.Entity;
			}
			set
			{
				PHIEU_THUE_PHONG previousValue = this._PHIEU_THUE_PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEU_THUE_PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEU_THUE_PHONG.Entity = null;
						previousValue.CT_THUE_PHONGs.Remove(this);
					}
					this._PHIEU_THUE_PHONG.Entity = value;
					if ((value != null))
					{
						value.CT_THUE_PHONGs.Add(this);
						this._ID_THUE_PHONG = value.ID_THUE_PHONG;
					}
					else
					{
						this._ID_THUE_PHONG = default(string);
					}
					this.SendPropertyChanged("PHIEU_THUE_PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICH_VU")]
	public partial class DICH_VU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DICH_VU;
		
		private string _TEN_DICH_VU;
		
		private int _DON_GIA;
		
		private EntitySet<CT_DICH_VU> _CT_DICH_VUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DICH_VUChanging(string value);
    partial void OnID_DICH_VUChanged();
    partial void OnTEN_DICH_VUChanging(string value);
    partial void OnTEN_DICH_VUChanged();
    partial void OnDON_GIAChanging(int value);
    partial void OnDON_GIAChanged();
    #endregion
		
		public DICH_VU()
		{
			this._CT_DICH_VUs = new EntitySet<CT_DICH_VU>(new Action<CT_DICH_VU>(this.attach_CT_DICH_VUs), new Action<CT_DICH_VU>(this.detach_CT_DICH_VUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DICH_VU", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DICH_VU
		{
			get
			{
				return this._ID_DICH_VU;
			}
			set
			{
				if ((this._ID_DICH_VU != value))
				{
					this.OnID_DICH_VUChanging(value);
					this.SendPropertyChanging();
					this._ID_DICH_VU = value;
					this.SendPropertyChanged("ID_DICH_VU");
					this.OnID_DICH_VUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_DICH_VU", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string TEN_DICH_VU
		{
			get
			{
				return this._TEN_DICH_VU;
			}
			set
			{
				if ((this._TEN_DICH_VU != value))
				{
					this.OnTEN_DICH_VUChanging(value);
					this.SendPropertyChanging();
					this._TEN_DICH_VU = value;
					this.SendPropertyChanged("TEN_DICH_VU");
					this.OnTEN_DICH_VUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DON_GIA", DbType="Int NOT NULL")]
		public int DON_GIA
		{
			get
			{
				return this._DON_GIA;
			}
			set
			{
				if ((this._DON_GIA != value))
				{
					this.OnDON_GIAChanging(value);
					this.SendPropertyChanging();
					this._DON_GIA = value;
					this.SendPropertyChanged("DON_GIA");
					this.OnDON_GIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICH_VU_CT_DICH_VU", Storage="_CT_DICH_VUs", ThisKey="ID_DICH_VU", OtherKey="ID_DICH_VU")]
		public EntitySet<CT_DICH_VU> CT_DICH_VUs
		{
			get
			{
				return this._CT_DICH_VUs;
			}
			set
			{
				this._CT_DICH_VUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DICH_VUs(CT_DICH_VU entity)
		{
			this.SendPropertyChanging();
			entity.DICH_VU = this;
		}
		
		private void detach_CT_DICH_VUs(CT_DICH_VU entity)
		{
			this.SendPropertyChanging();
			entity.DICH_VU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIA_THUE")]
	public partial class GIA_THUE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_GIA_THUE;
		
		private int _DON_GIA;
		
		private EntitySet<CT_GIA_THUE> _CT_GIA_THUEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GIA_THUEChanging(string value);
    partial void OnID_GIA_THUEChanged();
    partial void OnDON_GIAChanging(int value);
    partial void OnDON_GIAChanged();
    #endregion
		
		public GIA_THUE()
		{
			this._CT_GIA_THUEs = new EntitySet<CT_GIA_THUE>(new Action<CT_GIA_THUE>(this.attach_CT_GIA_THUEs), new Action<CT_GIA_THUE>(this.detach_CT_GIA_THUEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GIA_THUE", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_GIA_THUE
		{
			get
			{
				return this._ID_GIA_THUE;
			}
			set
			{
				if ((this._ID_GIA_THUE != value))
				{
					this.OnID_GIA_THUEChanging(value);
					this.SendPropertyChanging();
					this._ID_GIA_THUE = value;
					this.SendPropertyChanged("ID_GIA_THUE");
					this.OnID_GIA_THUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DON_GIA", DbType="Int NOT NULL")]
		public int DON_GIA
		{
			get
			{
				return this._DON_GIA;
			}
			set
			{
				if ((this._DON_GIA != value))
				{
					this.OnDON_GIAChanging(value);
					this.SendPropertyChanging();
					this._DON_GIA = value;
					this.SendPropertyChanged("DON_GIA");
					this.OnDON_GIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIA_THUE_CT_GIA_THUE", Storage="_CT_GIA_THUEs", ThisKey="ID_GIA_THUE", OtherKey="ID_GIA_THUE")]
		public EntitySet<CT_GIA_THUE> CT_GIA_THUEs
		{
			get
			{
				return this._CT_GIA_THUEs;
			}
			set
			{
				this._CT_GIA_THUEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_GIA_THUEs(CT_GIA_THUE entity)
		{
			this.SendPropertyChanging();
			entity.GIA_THUE = this;
		}
		
		private void detach_CT_GIA_THUEs(CT_GIA_THUE entity)
		{
			this.SendPropertyChanging();
			entity.GIA_THUE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOA_DON")]
	public partial class HOA_DON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_HOA_DON;
		
		private string _ID_THUE_PHONG;
		
		private string _ID_NHAN_VIEN;
		
		private System.DateTime _NGAY_LAP;
		
		private int _TIEN_THUE;
		
		private int _TIEN_DV;
		
		private int _TONG_TIEN;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
		private EntityRef<PHIEU_THUE_PHONG> _PHIEU_THUE_PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HOA_DONChanging(string value);
    partial void OnID_HOA_DONChanged();
    partial void OnID_THUE_PHONGChanging(string value);
    partial void OnID_THUE_PHONGChanged();
    partial void OnID_NHAN_VIENChanging(string value);
    partial void OnID_NHAN_VIENChanged();
    partial void OnNGAY_LAPChanging(System.DateTime value);
    partial void OnNGAY_LAPChanged();
    partial void OnTIEN_THUEChanging(int value);
    partial void OnTIEN_THUEChanged();
    partial void OnTIEN_DVChanging(int value);
    partial void OnTIEN_DVChanged();
    partial void OnTONG_TIENChanging(int value);
    partial void OnTONG_TIENChanged();
    #endregion
		
		public HOA_DON()
		{
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			this._PHIEU_THUE_PHONG = default(EntityRef<PHIEU_THUE_PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HOA_DON", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HOA_DON
		{
			get
			{
				return this._ID_HOA_DON;
			}
			set
			{
				if ((this._ID_HOA_DON != value))
				{
					this.OnID_HOA_DONChanging(value);
					this.SendPropertyChanging();
					this._ID_HOA_DON = value;
					this.SendPropertyChanged("ID_HOA_DON");
					this.OnID_HOA_DONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_THUE_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string ID_THUE_PHONG
		{
			get
			{
				return this._ID_THUE_PHONG;
			}
			set
			{
				if ((this._ID_THUE_PHONG != value))
				{
					if (this._PHIEU_THUE_PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_THUE_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_THUE_PHONG = value;
					this.SendPropertyChanged("ID_THUE_PHONG");
					this.OnID_THUE_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHAN_VIEN", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string ID_NHAN_VIEN
		{
			get
			{
				return this._ID_NHAN_VIEN;
			}
			set
			{
				if ((this._ID_NHAN_VIEN != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHAN_VIENChanging(value);
					this.SendPropertyChanging();
					this._ID_NHAN_VIEN = value;
					this.SendPropertyChanged("ID_NHAN_VIEN");
					this.OnID_NHAN_VIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_LAP", DbType="DateTime NOT NULL")]
		public System.DateTime NGAY_LAP
		{
			get
			{
				return this._NGAY_LAP;
			}
			set
			{
				if ((this._NGAY_LAP != value))
				{
					this.OnNGAY_LAPChanging(value);
					this.SendPropertyChanging();
					this._NGAY_LAP = value;
					this.SendPropertyChanged("NGAY_LAP");
					this.OnNGAY_LAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEN_THUE", DbType="Int NOT NULL")]
		public int TIEN_THUE
		{
			get
			{
				return this._TIEN_THUE;
			}
			set
			{
				if ((this._TIEN_THUE != value))
				{
					this.OnTIEN_THUEChanging(value);
					this.SendPropertyChanging();
					this._TIEN_THUE = value;
					this.SendPropertyChanged("TIEN_THUE");
					this.OnTIEN_THUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEN_DV", DbType="Int NOT NULL")]
		public int TIEN_DV
		{
			get
			{
				return this._TIEN_DV;
			}
			set
			{
				if ((this._TIEN_DV != value))
				{
					this.OnTIEN_DVChanging(value);
					this.SendPropertyChanging();
					this._TIEN_DV = value;
					this.SendPropertyChanged("TIEN_DV");
					this.OnTIEN_DVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONG_TIEN", DbType="Int NOT NULL")]
		public int TONG_TIEN
		{
			get
			{
				return this._TONG_TIEN;
			}
			set
			{
				if ((this._TONG_TIEN != value))
				{
					this.OnTONG_TIENChanging(value);
					this.SendPropertyChanging();
					this._TONG_TIEN = value;
					this.SendPropertyChanged("TONG_TIEN");
					this.OnTONG_TIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_HOA_DON", Storage="_NHAN_VIEN", ThisKey="ID_NHAN_VIEN", OtherKey="ID_NHAN_VIEN", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.HOA_DONs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.HOA_DONs.Add(this);
						this._ID_NHAN_VIEN = value.ID_NHAN_VIEN;
					}
					else
					{
						this._ID_NHAN_VIEN = default(string);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_THUE_PHONG_HOA_DON", Storage="_PHIEU_THUE_PHONG", ThisKey="ID_THUE_PHONG", OtherKey="ID_THUE_PHONG", IsForeignKey=true)]
		public PHIEU_THUE_PHONG PHIEU_THUE_PHONG
		{
			get
			{
				return this._PHIEU_THUE_PHONG.Entity;
			}
			set
			{
				PHIEU_THUE_PHONG previousValue = this._PHIEU_THUE_PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHIEU_THUE_PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEU_THUE_PHONG.Entity = null;
						previousValue.HOA_DONs.Remove(this);
					}
					this._PHIEU_THUE_PHONG.Entity = value;
					if ((value != null))
					{
						value.HOA_DONs.Add(this);
						this._ID_THUE_PHONG = value.ID_THUE_PHONG;
					}
					else
					{
						this._ID_THUE_PHONG = default(string);
					}
					this.SendPropertyChanged("PHIEU_THUE_PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACH_HANG")]
	public partial class KHACH_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_KHACH_HANG;
		
		private string _ID_PHONG;
		
		private string _TEN;
		
		private string _DIA_CHI;
		
		private string _SDT;
		
		private string _FAX;
		
		private string _TELEX;
		
		private EntitySet<PHIEU_DAT_PHONG> _PHIEU_DAT_PHONGs;
		
		private EntitySet<PHIEU_THUE_PHONG> _PHIEU_THUE_PHONGs;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHACH_HANGChanging(string value);
    partial void OnID_KHACH_HANGChanged();
    partial void OnID_PHONGChanging(string value);
    partial void OnID_PHONGChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnDIA_CHIChanging(string value);
    partial void OnDIA_CHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnFAXChanging(string value);
    partial void OnFAXChanged();
    partial void OnTELEXChanging(string value);
    partial void OnTELEXChanged();
    #endregion
		
		public KHACH_HANG()
		{
			this._PHIEU_DAT_PHONGs = new EntitySet<PHIEU_DAT_PHONG>(new Action<PHIEU_DAT_PHONG>(this.attach_PHIEU_DAT_PHONGs), new Action<PHIEU_DAT_PHONG>(this.detach_PHIEU_DAT_PHONGs));
			this._PHIEU_THUE_PHONGs = new EntitySet<PHIEU_THUE_PHONG>(new Action<PHIEU_THUE_PHONG>(this.attach_PHIEU_THUE_PHONGs), new Action<PHIEU_THUE_PHONG>(this.detach_PHIEU_THUE_PHONGs));
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHACH_HANG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_KHACH_HANG
		{
			get
			{
				return this._ID_KHACH_HANG;
			}
			set
			{
				if ((this._ID_KHACH_HANG != value))
				{
					this.OnID_KHACH_HANGChanging(value);
					this.SendPropertyChanging();
					this._ID_KHACH_HANG = value;
					this.SendPropertyChanged("ID_KHACH_HANG");
					this.OnID_KHACH_HANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHONG", DbType="VarChar(45)")]
		public string ID_PHONG
		{
			get
			{
				return this._ID_PHONG;
			}
			set
			{
				if ((this._ID_PHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_PHONG = value;
					this.SendPropertyChanged("ID_PHONG");
					this.OnID_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="VarChar(45)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIA_CHI", DbType="VarChar(45)")]
		public string DIA_CHI
		{
			get
			{
				return this._DIA_CHI;
			}
			set
			{
				if ((this._DIA_CHI != value))
				{
					this.OnDIA_CHIChanging(value);
					this.SendPropertyChanging();
					this._DIA_CHI = value;
					this.SendPropertyChanged("DIA_CHI");
					this.OnDIA_CHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(45)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAX", DbType="VarChar(45)")]
		public string FAX
		{
			get
			{
				return this._FAX;
			}
			set
			{
				if ((this._FAX != value))
				{
					this.OnFAXChanging(value);
					this.SendPropertyChanging();
					this._FAX = value;
					this.SendPropertyChanged("FAX");
					this.OnFAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEX", DbType="VarChar(45)")]
		public string TELEX
		{
			get
			{
				return this._TELEX;
			}
			set
			{
				if ((this._TELEX != value))
				{
					this.OnTELEXChanging(value);
					this.SendPropertyChanging();
					this._TELEX = value;
					this.SendPropertyChanged("TELEX");
					this.OnTELEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_HANG_PHIEU_DAT_PHONG", Storage="_PHIEU_DAT_PHONGs", ThisKey="ID_KHACH_HANG", OtherKey="ID_KHACH_HANG")]
		public EntitySet<PHIEU_DAT_PHONG> PHIEU_DAT_PHONGs
		{
			get
			{
				return this._PHIEU_DAT_PHONGs;
			}
			set
			{
				this._PHIEU_DAT_PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_HANG_PHIEU_THUE_PHONG", Storage="_PHIEU_THUE_PHONGs", ThisKey="ID_KHACH_HANG", OtherKey="ID_KHACH_HANG")]
		public EntitySet<PHIEU_THUE_PHONG> PHIEU_THUE_PHONGs
		{
			get
			{
				return this._PHIEU_THUE_PHONGs;
			}
			set
			{
				this._PHIEU_THUE_PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_KHACH_HANG", Storage="_PHONG", ThisKey="ID_PHONG", OtherKey="ID_PHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.KHACH_HANGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.KHACH_HANGs.Add(this);
						this._ID_PHONG = value.ID_PHONG;
					}
					else
					{
						this._ID_PHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEU_DAT_PHONGs(PHIEU_DAT_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACH_HANG = this;
		}
		
		private void detach_PHIEU_DAT_PHONGs(PHIEU_DAT_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACH_HANG = null;
		}
		
		private void attach_PHIEU_THUE_PHONGs(PHIEU_THUE_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACH_HANG = this;
		}
		
		private void detach_PHIEU_THUE_PHONGs(PHIEU_THUE_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACH_HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAN_VIEN")]
	public partial class NHAN_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NHAN_VIEN;
		
		private string _TEN_NV;
		
		private string _MAT_KHAU;
		
		private EntitySet<HOA_DON> _HOA_DONs;
		
		private EntitySet<PHIEU_DAT_PHONG> _PHIEU_DAT_PHONGs;
		
		private EntitySet<PHIEU_THUE_PHONG> _PHIEU_THUE_PHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NHAN_VIENChanging(string value);
    partial void OnID_NHAN_VIENChanged();
    partial void OnTEN_NVChanging(string value);
    partial void OnTEN_NVChanged();
    partial void OnMAT_KHAUChanging(string value);
    partial void OnMAT_KHAUChanged();
    #endregion
		
		public NHAN_VIEN()
		{
			this._HOA_DONs = new EntitySet<HOA_DON>(new Action<HOA_DON>(this.attach_HOA_DONs), new Action<HOA_DON>(this.detach_HOA_DONs));
			this._PHIEU_DAT_PHONGs = new EntitySet<PHIEU_DAT_PHONG>(new Action<PHIEU_DAT_PHONG>(this.attach_PHIEU_DAT_PHONGs), new Action<PHIEU_DAT_PHONG>(this.detach_PHIEU_DAT_PHONGs));
			this._PHIEU_THUE_PHONGs = new EntitySet<PHIEU_THUE_PHONG>(new Action<PHIEU_THUE_PHONG>(this.attach_PHIEU_THUE_PHONGs), new Action<PHIEU_THUE_PHONG>(this.detach_PHIEU_THUE_PHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHAN_VIEN", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NHAN_VIEN
		{
			get
			{
				return this._ID_NHAN_VIEN;
			}
			set
			{
				if ((this._ID_NHAN_VIEN != value))
				{
					this.OnID_NHAN_VIENChanging(value);
					this.SendPropertyChanging();
					this._ID_NHAN_VIEN = value;
					this.SendPropertyChanged("ID_NHAN_VIEN");
					this.OnID_NHAN_VIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_NV", DbType="VarChar(45)")]
		public string TEN_NV
		{
			get
			{
				return this._TEN_NV;
			}
			set
			{
				if ((this._TEN_NV != value))
				{
					this.OnTEN_NVChanging(value);
					this.SendPropertyChanging();
					this._TEN_NV = value;
					this.SendPropertyChanged("TEN_NV");
					this.OnTEN_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAT_KHAU", DbType="VarChar(45)")]
		public string MAT_KHAU
		{
			get
			{
				return this._MAT_KHAU;
			}
			set
			{
				if ((this._MAT_KHAU != value))
				{
					this.OnMAT_KHAUChanging(value);
					this.SendPropertyChanging();
					this._MAT_KHAU = value;
					this.SendPropertyChanged("MAT_KHAU");
					this.OnMAT_KHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_HOA_DON", Storage="_HOA_DONs", ThisKey="ID_NHAN_VIEN", OtherKey="ID_NHAN_VIEN")]
		public EntitySet<HOA_DON> HOA_DONs
		{
			get
			{
				return this._HOA_DONs;
			}
			set
			{
				this._HOA_DONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_PHIEU_DAT_PHONG", Storage="_PHIEU_DAT_PHONGs", ThisKey="ID_NHAN_VIEN", OtherKey="ID_NHAN_VIEN")]
		public EntitySet<PHIEU_DAT_PHONG> PHIEU_DAT_PHONGs
		{
			get
			{
				return this._PHIEU_DAT_PHONGs;
			}
			set
			{
				this._PHIEU_DAT_PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_PHIEU_THUE_PHONG", Storage="_PHIEU_THUE_PHONGs", ThisKey="ID_NHAN_VIEN", OtherKey="ID_NHAN_VIEN")]
		public EntitySet<PHIEU_THUE_PHONG> PHIEU_THUE_PHONGs
		{
			get
			{
				return this._PHIEU_THUE_PHONGs;
			}
			set
			{
				this._PHIEU_THUE_PHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOA_DONs(HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_HOA_DONs(HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
		
		private void attach_PHIEU_DAT_PHONGs(PHIEU_DAT_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_PHIEU_DAT_PHONGs(PHIEU_DAT_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
		
		private void attach_PHIEU_THUE_PHONGs(PHIEU_THUE_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_PHIEU_THUE_PHONGs(PHIEU_THUE_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEU_DAT_PHONG")]
	public partial class PHIEU_DAT_PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DAT_PHONG;
		
		private string _ID_KHACH_HANG;
		
		private string _ID_NHAN_VIEN;
		
		private System.DateTime _NGAY_DAT;
		
		private int _TONG_SO_KHACH;
		
		private int _TONG_SO_PHONG;
		
		private EntitySet<CT_DAT_PHONG> _CT_DAT_PHONGs;
		
		private EntityRef<KHACH_HANG> _KHACH_HANG;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DAT_PHONGChanging(string value);
    partial void OnID_DAT_PHONGChanged();
    partial void OnID_KHACH_HANGChanging(string value);
    partial void OnID_KHACH_HANGChanged();
    partial void OnID_NHAN_VIENChanging(string value);
    partial void OnID_NHAN_VIENChanged();
    partial void OnNGAY_DATChanging(System.DateTime value);
    partial void OnNGAY_DATChanged();
    partial void OnTONG_SO_KHACHChanging(int value);
    partial void OnTONG_SO_KHACHChanged();
    partial void OnTONG_SO_PHONGChanging(int value);
    partial void OnTONG_SO_PHONGChanged();
    #endregion
		
		public PHIEU_DAT_PHONG()
		{
			this._CT_DAT_PHONGs = new EntitySet<CT_DAT_PHONG>(new Action<CT_DAT_PHONG>(this.attach_CT_DAT_PHONGs), new Action<CT_DAT_PHONG>(this.detach_CT_DAT_PHONGs));
			this._KHACH_HANG = default(EntityRef<KHACH_HANG>);
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DAT_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DAT_PHONG
		{
			get
			{
				return this._ID_DAT_PHONG;
			}
			set
			{
				if ((this._ID_DAT_PHONG != value))
				{
					this.OnID_DAT_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_DAT_PHONG = value;
					this.SendPropertyChanged("ID_DAT_PHONG");
					this.OnID_DAT_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHACH_HANG", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string ID_KHACH_HANG
		{
			get
			{
				return this._ID_KHACH_HANG;
			}
			set
			{
				if ((this._ID_KHACH_HANG != value))
				{
					if (this._KHACH_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHACH_HANGChanging(value);
					this.SendPropertyChanging();
					this._ID_KHACH_HANG = value;
					this.SendPropertyChanged("ID_KHACH_HANG");
					this.OnID_KHACH_HANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHAN_VIEN", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string ID_NHAN_VIEN
		{
			get
			{
				return this._ID_NHAN_VIEN;
			}
			set
			{
				if ((this._ID_NHAN_VIEN != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHAN_VIENChanging(value);
					this.SendPropertyChanging();
					this._ID_NHAN_VIEN = value;
					this.SendPropertyChanged("ID_NHAN_VIEN");
					this.OnID_NHAN_VIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY_DAT", DbType="DateTime NOT NULL")]
		public System.DateTime NGAY_DAT
		{
			get
			{
				return this._NGAY_DAT;
			}
			set
			{
				if ((this._NGAY_DAT != value))
				{
					this.OnNGAY_DATChanging(value);
					this.SendPropertyChanging();
					this._NGAY_DAT = value;
					this.SendPropertyChanged("NGAY_DAT");
					this.OnNGAY_DATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONG_SO_KHACH", DbType="Int NOT NULL")]
		public int TONG_SO_KHACH
		{
			get
			{
				return this._TONG_SO_KHACH;
			}
			set
			{
				if ((this._TONG_SO_KHACH != value))
				{
					this.OnTONG_SO_KHACHChanging(value);
					this.SendPropertyChanging();
					this._TONG_SO_KHACH = value;
					this.SendPropertyChanged("TONG_SO_KHACH");
					this.OnTONG_SO_KHACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONG_SO_PHONG", DbType="Int NOT NULL")]
		public int TONG_SO_PHONG
		{
			get
			{
				return this._TONG_SO_PHONG;
			}
			set
			{
				if ((this._TONG_SO_PHONG != value))
				{
					this.OnTONG_SO_PHONGChanging(value);
					this.SendPropertyChanging();
					this._TONG_SO_PHONG = value;
					this.SendPropertyChanged("TONG_SO_PHONG");
					this.OnTONG_SO_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_DAT_PHONG_CT_DAT_PHONG", Storage="_CT_DAT_PHONGs", ThisKey="ID_DAT_PHONG", OtherKey="ID_DAT_PHONG")]
		public EntitySet<CT_DAT_PHONG> CT_DAT_PHONGs
		{
			get
			{
				return this._CT_DAT_PHONGs;
			}
			set
			{
				this._CT_DAT_PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_HANG_PHIEU_DAT_PHONG", Storage="_KHACH_HANG", ThisKey="ID_KHACH_HANG", OtherKey="ID_KHACH_HANG", IsForeignKey=true)]
		public KHACH_HANG KHACH_HANG
		{
			get
			{
				return this._KHACH_HANG.Entity;
			}
			set
			{
				KHACH_HANG previousValue = this._KHACH_HANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACH_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACH_HANG.Entity = null;
						previousValue.PHIEU_DAT_PHONGs.Remove(this);
					}
					this._KHACH_HANG.Entity = value;
					if ((value != null))
					{
						value.PHIEU_DAT_PHONGs.Add(this);
						this._ID_KHACH_HANG = value.ID_KHACH_HANG;
					}
					else
					{
						this._ID_KHACH_HANG = default(string);
					}
					this.SendPropertyChanged("KHACH_HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_PHIEU_DAT_PHONG", Storage="_NHAN_VIEN", ThisKey="ID_NHAN_VIEN", OtherKey="ID_NHAN_VIEN", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.PHIEU_DAT_PHONGs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEU_DAT_PHONGs.Add(this);
						this._ID_NHAN_VIEN = value.ID_NHAN_VIEN;
					}
					else
					{
						this._ID_NHAN_VIEN = default(string);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DAT_PHONGs(CT_DAT_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_DAT_PHONG = this;
		}
		
		private void detach_CT_DAT_PHONGs(CT_DAT_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_DAT_PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEU_THUE_PHONG")]
	public partial class PHIEU_THUE_PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_THUE_PHONG;
		
		private string _ID_KHACH_HANG;
		
		private string _ID_NHAN_VIEN;
		
		private int _TONG_SO_KHACH;
		
		private int _TONG_SO_PHONG;
		
		private EntitySet<CT_DICH_VU> _CT_DICH_VUs;
		
		private EntitySet<CT_THUE_PHONG> _CT_THUE_PHONGs;
		
		private EntitySet<HOA_DON> _HOA_DONs;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
		private EntityRef<KHACH_HANG> _KHACH_HANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_THUE_PHONGChanging(string value);
    partial void OnID_THUE_PHONGChanged();
    partial void OnID_KHACH_HANGChanging(string value);
    partial void OnID_KHACH_HANGChanged();
    partial void OnID_NHAN_VIENChanging(string value);
    partial void OnID_NHAN_VIENChanged();
    partial void OnTONG_SO_KHACHChanging(int value);
    partial void OnTONG_SO_KHACHChanged();
    partial void OnTONG_SO_PHONGChanging(int value);
    partial void OnTONG_SO_PHONGChanged();
    #endregion
		
		public PHIEU_THUE_PHONG()
		{
			this._CT_DICH_VUs = new EntitySet<CT_DICH_VU>(new Action<CT_DICH_VU>(this.attach_CT_DICH_VUs), new Action<CT_DICH_VU>(this.detach_CT_DICH_VUs));
			this._CT_THUE_PHONGs = new EntitySet<CT_THUE_PHONG>(new Action<CT_THUE_PHONG>(this.attach_CT_THUE_PHONGs), new Action<CT_THUE_PHONG>(this.detach_CT_THUE_PHONGs));
			this._HOA_DONs = new EntitySet<HOA_DON>(new Action<HOA_DON>(this.attach_HOA_DONs), new Action<HOA_DON>(this.detach_HOA_DONs));
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			this._KHACH_HANG = default(EntityRef<KHACH_HANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_THUE_PHONG", DbType="VarChar(45) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_THUE_PHONG
		{
			get
			{
				return this._ID_THUE_PHONG;
			}
			set
			{
				if ((this._ID_THUE_PHONG != value))
				{
					this.OnID_THUE_PHONGChanging(value);
					this.SendPropertyChanging();
					this._ID_THUE_PHONG = value;
					this.SendPropertyChanged("ID_THUE_PHONG");
					this.OnID_THUE_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHACH_HANG", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string ID_KHACH_HANG
		{
			get
			{
				return this._ID_KHACH_HANG;
			}
			set
			{
				if ((this._ID_KHACH_HANG != value))
				{
					if (this._KHACH_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHACH_HANGChanging(value);
					this.SendPropertyChanging();
					this._ID_KHACH_HANG = value;
					this.SendPropertyChanged("ID_KHACH_HANG");
					this.OnID_KHACH_HANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHAN_VIEN", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string ID_NHAN_VIEN
		{
			get
			{
				return this._ID_NHAN_VIEN;
			}
			set
			{
				if ((this._ID_NHAN_VIEN != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHAN_VIENChanging(value);
					this.SendPropertyChanging();
					this._ID_NHAN_VIEN = value;
					this.SendPropertyChanged("ID_NHAN_VIEN");
					this.OnID_NHAN_VIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONG_SO_KHACH", DbType="Int NOT NULL")]
		public int TONG_SO_KHACH
		{
			get
			{
				return this._TONG_SO_KHACH;
			}
			set
			{
				if ((this._TONG_SO_KHACH != value))
				{
					this.OnTONG_SO_KHACHChanging(value);
					this.SendPropertyChanging();
					this._TONG_SO_KHACH = value;
					this.SendPropertyChanged("TONG_SO_KHACH");
					this.OnTONG_SO_KHACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONG_SO_PHONG", DbType="Int NOT NULL")]
		public int TONG_SO_PHONG
		{
			get
			{
				return this._TONG_SO_PHONG;
			}
			set
			{
				if ((this._TONG_SO_PHONG != value))
				{
					this.OnTONG_SO_PHONGChanging(value);
					this.SendPropertyChanging();
					this._TONG_SO_PHONG = value;
					this.SendPropertyChanged("TONG_SO_PHONG");
					this.OnTONG_SO_PHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_THUE_PHONG_CT_DICH_VU", Storage="_CT_DICH_VUs", ThisKey="ID_THUE_PHONG", OtherKey="ID_THUE_PHONG")]
		public EntitySet<CT_DICH_VU> CT_DICH_VUs
		{
			get
			{
				return this._CT_DICH_VUs;
			}
			set
			{
				this._CT_DICH_VUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_THUE_PHONG_CT_THUE_PHONG", Storage="_CT_THUE_PHONGs", ThisKey="ID_THUE_PHONG", OtherKey="ID_THUE_PHONG")]
		public EntitySet<CT_THUE_PHONG> CT_THUE_PHONGs
		{
			get
			{
				return this._CT_THUE_PHONGs;
			}
			set
			{
				this._CT_THUE_PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEU_THUE_PHONG_HOA_DON", Storage="_HOA_DONs", ThisKey="ID_THUE_PHONG", OtherKey="ID_THUE_PHONG")]
		public EntitySet<HOA_DON> HOA_DONs
		{
			get
			{
				return this._HOA_DONs;
			}
			set
			{
				this._HOA_DONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_PHIEU_THUE_PHONG", Storage="_NHAN_VIEN", ThisKey="ID_NHAN_VIEN", OtherKey="ID_NHAN_VIEN", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.PHIEU_THUE_PHONGs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEU_THUE_PHONGs.Add(this);
						this._ID_NHAN_VIEN = value.ID_NHAN_VIEN;
					}
					else
					{
						this._ID_NHAN_VIEN = default(string);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_HANG_PHIEU_THUE_PHONG", Storage="_KHACH_HANG", ThisKey="ID_KHACH_HANG", OtherKey="ID_KHACH_HANG", IsForeignKey=true)]
		public KHACH_HANG KHACH_HANG
		{
			get
			{
				return this._KHACH_HANG.Entity;
			}
			set
			{
				KHACH_HANG previousValue = this._KHACH_HANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACH_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACH_HANG.Entity = null;
						previousValue.PHIEU_THUE_PHONGs.Remove(this);
					}
					this._KHACH_HANG.Entity = value;
					if ((value != null))
					{
						value.PHIEU_THUE_PHONGs.Add(this);
						this._ID_KHACH_HANG = value.ID_KHACH_HANG;
					}
					else
					{
						this._ID_KHACH_HANG = default(string);
					}
					this.SendPropertyChanged("KHACH_HANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DICH_VUs(CT_DICH_VU entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_THUE_PHONG = this;
		}
		
		private void detach_CT_DICH_VUs(CT_DICH_VU entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_THUE_PHONG = null;
		}
		
		private void attach_CT_THUE_PHONGs(CT_THUE_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_THUE_PHONG = this;
		}
		
		private void detach_CT_THUE_PHONGs(CT_THUE_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_THUE_PHONG = null;
		}
		
		private void attach_HOA_DONs(HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_THUE_PHONG = this;
		}
		
		private void detach_HOA_DONs(HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.PHIEU_THUE_PHONG = null;
		}
	}
}
#pragma warning restore 1591
